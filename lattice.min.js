(function(e){var t=function(){};t.prototype.init=function(e,t){this.game=e;var n=document.getElementById(t);var r=n.getContext("2d");this.stateManager=new StateManager(e,n);this.levelManager=new LevelManager(e,n);this.inputManager=new InputManager(e,n);this.zoneChecker=new ZoneChecker(e,n);this.canvas=n;this.ctx=r};t.prototype.startLoop=function(){var e=10;var t=this;var n=Date.now();this.loop=setInterval(function(){var e=t.stateManager.states[t.stateManager.currentState].call(t);if(e!==undefined){t.currentState=e}var r=Date.now();t.loopTimeElapsed=(r-n)/1e3;n=r},e)};t.prototype.update=function(){var e=this;this.game.update();this.levelManager.currentLevelObj().entities.forEach(function(t){t.update(e.loopTimeElapsed)})};t.prototype.draw=function(){var e=this;this.game.draw();this.levelManager.currentLevelObj().entities.forEach(function(t){t.draw(e.ctx)})};e.Lattice=t})(this);var _lattice_=new Lattice;(function(e){e.InputManager=function(){var e={};addEventListener("keydown",function(t){e[t.keyCode]=true},false);addEventListener("keyup",function(t){delete e[t.keyCode]},false);this.keyIsHeld=function(t){return t in e}}})(this);(function(e){var t=function(e,t){this.levels={};this.currentLevelNum=1};t.prototype.currentLevelObj=function(){return this.levels[this.currentLevelNum]};t.prototype.addLevel=function(e,t){this.levels[e]=t};t.prototype.removeLevel=function(e){delete this.levels[e]};e.LevelManager=t})(this);(function(e){var t=function(e,t){this.states={}};t.prototype.currentStateFn=function(){return this.states[this.currentStateFn]};t.prototype.addState=function(e,t){this.states[e]=t};t.prototype.removeState=function(e){delete this.states[e]};e.StateManager=t})(this);(function(e){var t=function(){};t.prototype.pointInTargetZone=function(e,t){return e.y>=t.yTop&&e.y<=t.yBottom&&e.x>=t.xLeft&&e.x<=t.xRight};t.prototype.pointInAnyOfTargetZones=function(e,t){var n=false;t.forEach(function(t){if(this.pointInTargetZone(e,t)){n=true}});return n};t.prototype.entirelyInAnyTargetZone=function(e,t){var n=true;e.points().forEach(function(e){if(!this.pointInAnyOfTargetZones(e,t)){n=false}});return n};t.prototype.vertexInTargetZone=function(e,t){var n=false;var r=this;e.points().forEach(function(e){if(r.pointInTargetZone(e,t)){n=true}});return n};t.prototype.vertexInAnyTargetZones=function(e,t){var n=false;var r=this;if(t){t.forEach(function(t){if(r.vertexInTargetZone(e,t)){n=true}});return n}};t.prototype.anyVertexInTargetZone=function(e,t){var n=false;var r=this;var i;if(e){e.forEach(function(e){if(r.vertexInTargetZone(e,t)){n=true;i=e;return false}});return{result:n,sourceZone:i}}};t.prototype.zonify=function(e){this._mixin(e,this.mixins.zone)};t.prototype._mixin=function(e,t){for(var n in t){e[n]=t[n]}};t.prototype.mixins={zone:{xLeft:0,xRight:0,yBottom:0,yTop:0,xMid:0,width:0,height:0,points:function(){return[{x:this.xLeft,y:this.yBottom},{x:this.xRight,y:this.yBottom},{x:this.xLeft,y:this.yTop},{x:this.xRight,y:this.yTop}]}}};e.ZoneChecker=t})(this)